dashArray = "3",
fillOpacity = 0.7)
View(pal)
View(pal)
pal <- colorBin("YlOrRd", domain = mapdata$Severe.Wasting, bins = bins)
m <- leaflet(world1) %>%
addTiles()%>%addPolygons(
fillColor = ~pal(density),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7)
View(world1)
datos1  = read.csv("country-wise-average.csv", sep = ",")
datos2  = read.csv("malnutrition-estimates.csv", sep = ",")
library(XML)
library(ggplot2)
library(scales)
library(plyr)
library(maps)
library("rnaturalearth")
library("rnaturalearthdata")
library(sf)
library(raster)
# #> Warning: multiple methods tables found for 'approxNA'
library(dplyr)
library(spData)
install.packages("spDataLarge", repos = "https://nowosad.r-universe.dev")
install.packages("spDataLarge", repos = "https://nowosad.r-universe.dev")
#library(spData)
#install.packages("spDataLarge", repos = "https://nowosad.r-universe.dev")
#library(spDataLarge)
#
library(tmap)    # for static and interactive maps
# library(leaflet) # for interactive maps
library(ggplot2) # tidyverse data visualization package
library(tidyverse)
library(tools)
datos1$sovereignt = tolower(datos1$Country)
datos1$sovereignt = unlist(lapply(datos1$sovereignt, FUN=toTitleCase))
datos1$sovereignt[datos1$sovereignt == "Bolivia (Plurinational State of)"] <- "Bolivia"
datos1$sovereignt[datos1$sovereignt == "Cote D'ivoire"] <- "Côte d'Ivoire"
datos1$sovereignt[datos1$sovereignt == "Central African Republic (the)"] <- "Central African Republic"
datos1$sovereignt[datos1$sovereignt == "Republic of Korea (the)"] <- "Republic of Korea"
datos1$sovereignt[datos1$sovereignt == "Syrian Arab Republic (the)"] <- "Syria"
datos1$sovereignt[datos1$sovereignt == "Philippines (the)"] <- "Philippines"
datos1$sovereignt[datos1$sovereignt == "United Republic of Tanzania (the)"] <- "Tanzania"
datos1$sovereignt[datos1$sovereignt == "United States of America (the)"] <- "United States"
datos1$sovereignt[datos1$sovereignt == "Venezuela (Bolivarian Republic of)"] <- "Venezuela"
datos1$sovereignt[datos1$sovereignt == "Niger (the)"] <- "Niger"
datos1$sovereignt[datos1$sovereignt == "Congo (the)"] <- "Republic of the Congo"
datos1$sovereignt[datos1$sovereignt == "State of Palestine"] <- "Palestine"
datos1$sovereignt[datos1$sovereignt == "Viet Nam"] <- "Vietnam"
datos1$sovereignt[datos1$sovereignt == "Czechia"] <- "Czech Republic"
datos1$sovereignt[datos1$sovereignt == "Democratic Rep. of the Congo (the)"] <- "Democratic Republic of the Congo"
datos1$sovereignt[datos1$sovereignt == "Sudan (the)"] <- "Sudan"
datos1$sovereignt[datos1$sovereignt == "Dominican Republic (the)"] <- "Dominican Republic"
datos1$sovereignt[datos1$sovereignt == "Gambia (the)"] <- "The Gambia"
datos1$sovereignt[datos1$sovereignt == "Lao People's Democratic Rep. (the)"] <- "Lao PDR"
datos1$sovereignt[datos1$sovereignt == "Democratic People's Rep. of Korea (the)"] <- "Dem. Rep. Korea"
datos1$sovereignt[datos1$sovereignt == "Iran (Islamic Republic of)"] <- "Iran"
datos1$sovereignt[datos1$sovereignt == "Republic of Moldova (the)"] <- "Moldova"
datos1$sovereignt[datos1$sovereignt == "North Macedonia"] <- "Macedonia"
datos1 <- datos1[!(datos1$sovereignt =="Bahrain"),]
datos1 <- datos1[!(datos1$sovereignt =="Barbados"),]
datos1 <- datos1[!(datos1$sovereignt =="Cabo Verde"),]
datos1 <- datos1[!(datos1$sovereignt =="Comoros (the)"),]
datos1 <- datos1[!(datos1$sovereignt =="Kiribati"),]
datos1 <- datos1[!(datos1$sovereignt =="Maldives"),]
datos1 <- datos1[!(datos1$sovereignt =="Marshall Islands"),]
datos1 <- datos1[!(datos1$sovereignt =="Mauritius"),]
datos1 <- datos1[!(datos1$sovereignt =="Nauru"),]
datos1 <- datos1[!(datos1$sovereignt =="Saint Lucia"),]
datos1 <- datos1[!(datos1$sovereignt =="Samoa"),]
datos1 <- datos1[!(datos1$sovereignt =="Seychelles"),]
datos1 <- datos1[!(datos1$sovereignt =="Singapore"),]
datos1 <- datos1[!(datos1$sovereignt =="Tonga"),]
mapdata <-map_data("world")
datosred = datos1[,c("sovereignt", "Severe.Wasting")]
library(maps)
library(leaflet)
world1 <- ne_countries(scale = "medium", returnclass = "sf")
world1 <- left_join(world1,datosred, by = "sovereignt")
View(world1)
View(datosred)
world1 <- left_join(world1,datosred, by = "sovereignt")
View(world1)
datos1  = read.csv("country-wise-average.csv", sep = ",")
datos2  = read.csv("malnutrition-estimates.csv", sep = ",")
library(XML)
library(ggplot2)
library(scales)
library(plyr)
library(maps)
library("rnaturalearth")
library("rnaturalearthdata")
library(sf)
library(raster)
# #> Warning: multiple methods tables found for 'approxNA'
library(dplyr)
#library(spData)
#install.packages("spDataLarge", repos = "https://nowosad.r-universe.dev")
#library(spDataLarge)
#
library(tmap)    # for static and interactive maps
# library(leaflet) # for interactive maps
library(ggplot2) # tidyverse data visualization package
library(tidyverse)
library(tools)
datos1$sovereignt = tolower(datos1$Country)
datos1$sovereignt = unlist(lapply(datos1$sovereignt, FUN=toTitleCase))
datos1$sovereignt[datos1$sovereignt == "Bolivia (Plurinational State of)"] <- "Bolivia"
datos1$sovereignt[datos1$sovereignt == "Cote D'ivoire"] <- "Côte d'Ivoire"
datos1$sovereignt[datos1$sovereignt == "Central African Republic (the)"] <- "Central African Republic"
datos1$sovereignt[datos1$sovereignt == "Republic of Korea (the)"] <- "Republic of Korea"
datos1$sovereignt[datos1$sovereignt == "Syrian Arab Republic (the)"] <- "Syria"
datos1$sovereignt[datos1$sovereignt == "Philippines (the)"] <- "Philippines"
datos1$sovereignt[datos1$sovereignt == "United Republic of Tanzania (the)"] <- "Tanzania"
datos1$sovereignt[datos1$sovereignt == "United States of America (the)"] <- "United States"
datos1$sovereignt[datos1$sovereignt == "Venezuela (Bolivarian Republic of)"] <- "Venezuela"
datos1$sovereignt[datos1$sovereignt == "Niger (the)"] <- "Niger"
datos1$sovereignt[datos1$sovereignt == "Congo (the)"] <- "Republic of the Congo"
datos1$sovereignt[datos1$sovereignt == "State of Palestine"] <- "Palestine"
datos1$sovereignt[datos1$sovereignt == "Viet Nam"] <- "Vietnam"
datos1$sovereignt[datos1$sovereignt == "Czechia"] <- "Czech Republic"
datos1$sovereignt[datos1$sovereignt == "Democratic Rep. of the Congo (the)"] <- "Democratic Republic of the Congo"
datos1$sovereignt[datos1$sovereignt == "Sudan (the)"] <- "Sudan"
datos1$sovereignt[datos1$sovereignt == "Dominican Republic (the)"] <- "Dominican Republic"
datos1$sovereignt[datos1$sovereignt == "Gambia (the)"] <- "The Gambia"
datos1$sovereignt[datos1$sovereignt == "Lao People's Democratic Rep. (the)"] <- "Lao PDR"
datos1$sovereignt[datos1$sovereignt == "Democratic People's Rep. of Korea (the)"] <- "Dem. Rep. Korea"
datos1$sovereignt[datos1$sovereignt == "Iran (Islamic Republic of)"] <- "Iran"
datos1$sovereignt[datos1$sovereignt == "Republic of Moldova (the)"] <- "Moldova"
datos1$sovereignt[datos1$sovereignt == "North Macedonia"] <- "Macedonia"
datos1 <- datos1[!(datos1$sovereignt =="Bahrain"),]
datos1 <- datos1[!(datos1$sovereignt =="Barbados"),]
datos1 <- datos1[!(datos1$sovereignt =="Cabo Verde"),]
datos1 <- datos1[!(datos1$sovereignt =="Comoros (the)"),]
datos1 <- datos1[!(datos1$sovereignt =="Kiribati"),]
datos1 <- datos1[!(datos1$sovereignt =="Maldives"),]
datos1 <- datos1[!(datos1$sovereignt =="Marshall Islands"),]
datos1 <- datos1[!(datos1$sovereignt =="Mauritius"),]
datos1 <- datos1[!(datos1$sovereignt =="Nauru"),]
datos1 <- datos1[!(datos1$sovereignt =="Saint Lucia"),]
datos1 <- datos1[!(datos1$sovereignt =="Samoa"),]
datos1 <- datos1[!(datos1$sovereignt =="Seychelles"),]
datos1 <- datos1[!(datos1$sovereignt =="Singapore"),]
datos1 <- datos1[!(datos1$sovereignt =="Tonga"),]
mapdata <-map_data("world")
datosred = datos1[,c("sovereignt", "Severe.Wasting")]
library(maps)
library(leaflet)
world1 <- ne_countries(scale = "medium", returnclass = "sf")
world1 <- left_join(world1,datosred, by = "sovereignt")
class(world)
bins <- c(0, 10, 20, 50, 100, 200, 500, 1000, Inf)
pal <- colorBin("YlOrRd", domain = mapdata$Severe.Wasting, bins = bins)
View(pal)
pal <- colorBin("YlOrRd", domain = world1$Severe.Wasting, bins = bins)
m <- leaflet(world1) %>%
addTiles()%>%addPolygons(
fillColor = ~pal(density),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7)
world1$Severe.Wasting[is.na(world1$Severe.Wasting)==TRUE]<-0
class(world)
bins <- c(0, 10, 20, 50, 100, 200, 500, 1000, Inf)
pal <- colorBin("YlOrRd", domain = world1$Severe.Wasting, bins = bins)
m <- leaflet(world1) %>%
addTiles()%>%addPolygons(
fillColor = ~pal(density),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7)
View(world1)
bins <- c(0, 10, 20, 50, 100, 200, 500, 1000, Inf)
pal <- colorBin("YlOrRd", domain = world1$Severe.Wasting, bins = bins)
m <- leaflet(world1) %>%
addTiles()%>%addPolygons(
fillColor = ~pal(density),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7)
bins <- c(0, 10, 20, 30, 40, 50, 60, 70, 80,10,100)
pal <- colorBin("YlOrRd", domain = world1$Severe.Wasting, bins = bins)
m <- leaflet(world1) %>%
addTiles()%>%addPolygons(
fillColor = ~pal(density),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7)
m <- leaflet(world1) %>%
addTiles()%>%addPolygons(
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7)
m
world1$Severe.Wasting
pal <- colorBin("YlOrRd", domain = world1$Severe.Wasting)
m <- leaflet(world1) %>%
addTiles()%>%addPolygons(
fillColor = ~pal(density),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7)
m <- leaflet(world1) %>%
addTiles()%>%addPolygons(
fillColor = ~pal(world1$Severe.Wasting),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7)
m
m <- leaflet(world1) %>%
addTiles()%>%addPolygons(
fillColor = ~pal(world1$Severe.Wasting),
weight = 2,
opacity = 1,
color = "black",
dashArray = "3",
fillOpacity = 0.7)
m
m <- leaflet(world1) %>%
addTiles()%>%addPolygons(
fillColor = ~pal(world1$Severe.Wasting),
weight = 2,
opacity = 1,
color = "black",
dashArray = "1",
fillOpacity = 0.7)
m
m <- leaflet(world1) %>%
addTiles()%>%addPolygons(
fillColor = ~pal(world1$Severe.Wasting),
opacity = 1,
color = "black",
dashArray = "1",
fillOpacity = 0.7)
m
m <- leaflet(world1) %>%
addTiles()%>%addPolygons(
fillColor = ~pal(world1$Severe.Wasting),
weight = 1,
opacity = 1,
color = "black",
dashArray = "1",
fillOpacity = 0.7)
m
m <- leaflet(world1) %>%
addTiles()%>%addPolygons(
fillColor = ~pal(world1$Severe.Wasting),
weight = 4,
opacity = 1,
color = "black",
dashArray = "1",
fillOpacity = 0.7)
m
m <- leaflet(world1) %>%
addTiles()%>%addPolygons(
fillColor = ~pal(world1$Severe.Wasting),
weight = 4,
opacity = 1,
color = "black",
dashArray = "1",
fillOpacity = 0.7)
m
m <- leaflet(world1) %>%
addTiles()%>%addPolygons(
fillColor = ~pal(world1$Severe.Wasting),
weight = 4,
opacity = 1,
color = "black",
dashArray = "3",
fillOpacity = 0.7)
help(addPolygons)
m <- leaflet(world1) %>%
addTiles()%>%addPolygons(
fillColor = ~pal(world1$Severe.Wasting),
weight = 4,
opacity = 1,
color = "black",
dashArray = "3",
fillOpacity = 0.7)
m
m <- leaflet(world1) %>%
addTiles()%>%addPolygons(
fillColor = ~pal(world1$Severe.Wasting),
weight = 2,
opacity = 1,
color = "black",
dashArray = "3",
fillOpacity = 0.7)
m
m <- leaflet(world1) %>%
addTiles()%>%addPolygons(
fillColor = ~pal(world1$Severe.Wasting),
weight = 2,
opacity = 1,
color = "black",
dashArray = "2",
fillOpacity = 0.7)
m
m <- leaflet(world1) %>%
addTiles()%>%addPolygons(
fillColor = ~pal(world1$Severe.Wasting),
weight = 2,
opacity = 1,
color = "black",
dashArray = "4",
fillOpacity = 0.7)
m
m <- leaflet(world1) %>%
addTiles()%>%addPolygons(
fillColor = ~pal(world1$Severe.Wasting),
weight = 2,
opacity = 1,
color = "black",
#dashArray = "4",
fillOpacity = 0.7)
m
m <- leaflet(world1) %>%
addTiles()%>%addPolygons(
fillColor = ~pal(world1$Severe.Wasting),
#weight = 2,
opacity = 1,
color = "black",
#dashArray = "4",
fillOpacity = 0.7)
m
m <- leaflet(world1) %>%
addTiles()%>%addPolygons(
fillColor = ~pal(world1$Severe.Wasting),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlightOptions = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE))
m
m <- leaflet(world1) %>%leaflet(Data) %>%
addProviderTiles(providers$Stamen.TonerLite) %>%
addTiles()%>%addPolygons(
fillColor = ~pal(world1$Severe.Wasting),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlightOptions = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE))
m <- leaflet(world1) %>%
addTiles()%>%addPolygons(
fillColor = ~pal(world1$Severe.Wasting),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlightOptions = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE))
m
m <- leaflet(world1) %>%
addTiles()%>%  addPolygons(
fillColor = ~pal(density),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlightOptions = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
addLegend(pal = pal, values = ~density, opacity = 0.7, title = NULL,
position = "bottomright")
labels <- sprintf(
"<strong>%s</strong><br/>%g people / mi<sup>2</sup>",
states$name, states$density
) %>% lapply(htmltools::HTML)
labels <- sprintf(
"<strong>%s</strong><br/>%g percentage / mi<sup>2</sup>",
world1$sovereignt, world1$Severe.Wasting
) %>% lapply(htmltools::HTML)
m <- leaflet(world1) %>%
addTiles()%>%  addPolygons(
fillColor = ~pal(density),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlightOptions = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
addLegend(pal = pal, values = ~density, opacity = 0.7, title = NULL,
position = "bottomright")
m <- leaflet(world1) %>%
addTiles()%>%  addPolygons(
fillColor = ~pal(world1$Severe.Wasting),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlightOptions = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
addLegend(pal = pal, values = ~density, opacity = 0.7, title = NULL,
position = "bottomright")
labels <- sprintf(
"<strong>%s</strong><br/>%g percentage / mi<sup>2</sup>",
world1$sovereignt, world1$Severe.Wasting
) %>% lapply(htmltools::HTML)
m <- leaflet(world1) %>%
addTiles()%>%  addPolygons(
fillColor = ~pal(world1$Severe.Wasting),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlightOptions = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
addLegend(pal = pal, values = ~density, opacity = 0.7, title = NULL,
position = "bottomright")
m
labels <- sprintf(
"<strong>%s</strong><br/>%g &#37",
world1$sovereignt, world1$Severe.Wasting
) %>% lapply(htmltools::HTML)
m <- leaflet(world1) %>%
addTiles()%>%  addPolygons(
fillColor = ~pal(world1$Severe.Wasting),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlightOptions = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
addLegend(pal = pal, values = ~density, opacity = 0.7, title = NULL,
position = "bottomright")
m
